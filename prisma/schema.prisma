// Prisma schema for FitSync v2 (Progress-Oriented Design)
// PostgreSQL + Prisma ORM

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id              String        @id @default(uuid())
    name            String
    email           String        @unique
    password        String
    profileImage    String?
    age             Int
    heightCm        Float
    currentWeightKg Float
    gender          Gender
    healthGoal      HealthGoal
    targetWeightKg  Float?
    targetDeadline  DateTime?
    activityLevel   ActivityLevel
    createdAt       DateTime      @default(now())
    updatedAt       DateTime      @updatedAt

    dailyStats   DailyStat[]
    progressLogs ProgressLog[]
    mealPlans    MealPlan[]
    weeklyPlans  WeeklyPlan[]
}

model DailyStat {
    id     String @id @default(uuid())
    userId String
    user   User   @relation(fields: [userId], references: [id])

    date           DateTime @unique @default(now())
    steps          Int
    activeCalories Int
    heartRateAvg   Float
    sleepHours     Float
    weightKg       Float // record weight for the day

    createdAt DateTime @default(now())
}

model ProgressLog {
    id     String @id @default(uuid())
    userId String
    user   User   @relation(fields: [userId], references: [id])

    date         DateTime @default(now())
    weightKg     Float
    bmi          Float
    caloriesIn   Float
    caloriesOut  Float
    progressNote String? // e.g., "Improved cardio performance"

    createdAt DateTime @default(now())
}

model MealPlan {
    id     String @id @default(uuid())
    userId String
    user   User   @relation(fields: [userId], references: [id])

    date          DateTime @default(now())
    breakfast     String
    lunch         String
    dinner        String
    snacks        String?
    totalCalories Float
    proteinGrams  Float
    carbsGrams    Float
    fatsGrams     Float
}

model WeeklyPlan {
    id     String @id @default(uuid())
    userId String
    user   User   @relation(fields: [userId], references: [id])

    weekStartDate DateTime
    weekEndDate   DateTime
    summary       String? // summary of weekly plan or goals
    aiGenerated   Boolean  @default(true)
    planData      Json // AI-generated structured meal plan for the week
}

enum Gender {
    MALE
    FEMALE
    OTHER
}

enum HealthGoal {
    WEIGHT_LOSS
    WEIGHT_GAIN
    MAINTENANCE
}

enum ActivityLevel {
    SEDENTARY
    LIGHT
    MODERATE
    ACTIVE
    VERY_ACTIVE
}
